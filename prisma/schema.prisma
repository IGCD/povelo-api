generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Email {
  id        Int       @id @default(autoincrement())
  userId    Int?
  email     String    @unique @db.VarChar(255)
  password  String?   @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  user      User?     @relation("userEmail", fields: [userId], references: [id])

  @@unique([email, password])
  @@index([userId], name: "userId")
}

model Post {
  id        Int       @id @default(autoincrement())
  userId    Int?
  title     String    @db.VarChar(255)
  content   String    @db.VarChar(255)
  imageUrl  String?   @db.VarChar(255)
  thumbnail String?   @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  user      User?     @relation("userPost", fields: [userId], references: [id])

  @@index([userId], map: "userId")
}

model Session {
  id        Int       @id @default(autoincrement())
  userId    Int?
  token     String?   @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @db.DateTime(0)
  user      User?     @relation("userSession", fields: [userId], references: [id])

  @@index([userId], name: "userId")
}

model User {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(255)
  profilePictureUrl String?   @db.VarChar(255)
  phoneNumber       String?   @unique(map: "unique__user_phoneNumber") @db.VarChar(255)
  subPhoneNumber    String?   @db.VarChar(255)
  createdAt         DateTime  @default(now()) @db.DateTime(0)
  updatedAt         DateTime? @db.DateTime(0)
  emails            Email[]   @relation("userEmail")
  posts             Post[]    @relation("userPost")
  sessions          Session[] @relation("userSession")
}
